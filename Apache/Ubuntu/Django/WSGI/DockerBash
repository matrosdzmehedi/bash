#!/bin/bash

#====================================================================================
# This script generates a Dockerfile and it's necessary directory and files for 
# Django Dockerization using Ubuntu Apache WSGI
# Before run the script you need to change it's permission by using #chmod a+x
# Syntex
# ./filename <Domain Name> <Project Name> <Directory Name of WSGI File> <HOST_AND_CONTAINER_PORT>
# Example
# ./filename example.com demo WSGI_Files_Directory_name 80:80
#====================================================================================

#=========================================================
# Parameters
#=========================================================
DOMAIN=$1
PROJECT_NAME=$2
WSGI_FILE_DIRECTORY=$3
sklExtraVariable="PATH"
HOST_AND_CONTAINER_PORT=$4


#=========================================================
# Colors in bash text
#=========================================================
RED="\e[31m"
GREEN="\e[32m"
BLUE="\e[94m"
YELLOW="\e[93m"
ENDCOLOR="\e[0m"



if [ -n "$1" ]; then
  echo -e "${BLUE}Domain: $DOMAIN ${ENDCOLOR}"
else
  echo -e "${RED}Please provide a domain Name${ENDCOLOR}"
  exit 1
fi

if [ -n "$2" ]; then
  echo -e "${BLUE}Project: $PROJECT_NAME ${ENDCOLOR}"
else
  echo -e "${RED}Please provide a project name${ENDCOLOR}"
  exit 1
fi


if [ -n "$3" ]; then
  echo -e "${BLUE}WSGI: $WSGI_FILE_DIRECTORY ${ENDCOLOR}"
else
  echo -e "${RED}Please provide the WSGI file's directory name${ENDCOLOR}"
  exit 1
fi

#=========================================================
# Create Django project code directory
#=========================================================
mkdir -vp ./code


echo " 
FROM ubuntu:latest

LABEL author=\"Shakil Ahamed\"
LABEL maintainer=\"sklahamed@gmail.com\"

#====================================================================================
# Update your OS
#====================================================================================
RUN apt update -y


#====================================================================================
# Install necessary packages
#====================================================================================
RUN apt-get install apache2 apache2-utils libexpat1 ssl-cert python3 libapache2-mod-wsgi-py3 nano -y
RUN apt install python3.10-venv -y


#====================================================================================
# Add customized apache configuration to the container
#====================================================================================
ADD ./000-default.conf /etc/apache2/sites-available/


#====================================================================================
# Create directory for the project
# I follow a conventions where /home/<domain name>/<project name>/code
# Note: You can modify it to your own choice. I like it in this way.
#====================================================================================
RUN mkdir -vp /home/$DOMAIN/$PROJECT_NAME/code

#====================================================================================
# Create a virtual environment for the project.
# Note: It is funny to create a virtual environment in a container where a container itself is an isolated virtual machine.
# However, to run the application without VENV remove below line and add RUN ln /usr/bin/python3 /usr/bin/python instead
#====================================================================================
RUN python3 -m venv /home/$DOMAIN/$PROJECT_NAME/sklenv


#====================================================================================
# Copy your code from host to the container
#====================================================================================
COPY ./code /home/$DOMAIN/$PROJECT_NAME/code


#====================================================================================
# Activate VENV. It is alternative to the command: source ./<venv>/bin/activate
#====================================================================================
ENV PATH=\"/home/$DOMAIN/$PROJECT_NAME/sklenv/bin:$"$sklExtraVariable\""

#====================================================================================
# Set the current working directory into the container.
# Usually after activating our VENV we go to the directory where manage.py is located this is what we are doing here.
# This would be the directory where manage.py is located.
# Similar to command, <VENV>: cd /home/localhost/deployment/code
#====================================================================================
WORKDIR /home/$DOMAIN/$PROJECT_NAME/code

#====================================================================================
# Magic command to install project's dependency
#====================================================================================
RUN pip install wheel
RUN pip install -r requirements.txt

#====================================================================================
# We would like to run the application in port 80 of the container
#====================================================================================
EXPOSE 80

#====================================================================================
# Run apache
#====================================================================================
CMD [\"apache2ctl\", \"-D\", \"FOREGROUND\"]


" > ./Dockerfile

echo "
#=========================================================
# Enable WSGI for Project
# WSGIPythonHome is the location of your ENV file
# WSGIPythonPath is the location of your code where manage.py is located
#=========================================================
WSGIPythonHome /home/$DOMAIN/$PROJECT_NAME/sklenv
WSGIPythonPath /home/$DOMAIN/$PROJECT_NAME/code

#=========================================================
#
# Port PORT 80
#
#=========================================================

<VirtualHost *:80>

#=========================================================
# Set document root
#=========================================================
DocumentRoot /home/$DOMAIN/$PROJECT_NAME

#=========================================================
# Point Domain to the server
#=========================================================
ServerAdmin webmaster@$DOMAIN
ServerName $DOMAIN


#=========================================================
# Static
#=========================================================
Alias /static /home/$DOMAIN/$PROJECT_NAME/code/static
<Directory /home/$DOMAIN/$PROJECT_NAME/code/static>
Require all granted
</Directory>


#=========================================================
# Set Alias for WSGI
#=========================================================
WSGIScriptAlias / /home/$DOMAIN/$PROJECT_NAME/code/$WSGI_FILE_DIRECTORY/wsgi.py
<Directory /home/$DOMAIN/$PROJECT_NAME>
<Files wsgi.py>
Require all granted
</Files>
</Directory>

</VirtualHost>
" > ./000-default.conf

echo "
version: \"3.9\"
services:
  django:
    build: .
    ports:
      - \"$HOST_AND_CONTAINER_PORT\"
" > ./docker-compose.yml
